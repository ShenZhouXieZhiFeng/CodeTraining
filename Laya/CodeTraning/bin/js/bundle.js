var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/TestScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var GameUI_1 = require("./script/GameUI");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        // GameConfig.startScene && Laya.Scene.open(GameConfig.startScene);
        new GameUI_1.default();
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/GameUI":3}],3:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var RES_1 = require("./RES");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function () {
    function GameUI() {
        this._showScene();
        //添加3D场景
        // var scene: Laya.Scene3D = Laya.stage.addChild(new Laya.Scene3D()) as Laya.Scene3D;
        // //添加照相机
        // var camera: Laya.Camera = (scene.addChild(new Laya.Camera(0, 0.1, 100))) as Laya.Camera;
        // camera.transform.translate(new Laya.Vector3(0, 3, 3));
        // camera.transform.rotate(new Laya.Vector3(-30, 0, 0), true, false);
        // //添加方向光
        // var directionLight: Laya.DirectionLight = scene.addChild(new Laya.DirectionLight()) as Laya.DirectionLight;
        // directionLight.color = new Laya.Vector3(0.6, 0.6, 0.6);
        // directionLight.transform.worldMatrix.setForward(new Laya.Vector3(1, -1, 0));
        // //添加自定义模型
        // var box: Laya.MeshSprite3D = scene.addChild(new Laya.MeshSprite3D(Laya.PrimitiveMesh.createBox(1, 1, 1))) as Laya.MeshSprite3D;
        // box.transform.rotate(new Laya.Vector3(0, 45, 0), false, false);
        // var material: Laya.BlinnPhongMaterial = new Laya.BlinnPhongMaterial();
        // Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(null, function(tex:Laya.Texture2D) {
        // 		material.albedoTexture = tex;
        // }));
        // box.meshRenderer.material = material;
        window['gu'] = this;
    }
    GameUI.prototype._showScene = function () {
        return __awaiter(this, void 0, void 0, function () {
            var sceneUrl, scene, cube, mat;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        sceneUrl = "res/d3/scenes/scene01/Conventional/SampleScene.ls";
                        return [4 /*yield*/, RES_1.RESD3.loadResByFullName(sceneUrl)];
                    case 1:
                        _a.sent();
                        scene = RES_1.default.getResByFullName(sceneUrl);
                        Laya.stage.addChild(scene);
                        cube = scene.getChildByName("Cube");
                        mat = new Laya.PBRStandardMaterial();
                        // Laya.Texture2D.load("res/layabox.png", Laya.Handler.create(this, (tex: Laya.Texture2D) =>
                        // {
                        //     mat.albedoTexture = tex;
                        //     cube.meshRenderer.material = mat;
                        // }))
                        this.cube = cube;
                        return [2 /*return*/];
                }
            });
        });
    };
    GameUI.prototype.rotate = function (x, y, z) {
        this.cube.transform.rotate(new Laya.Vector3(x, y, z));
    };
    GameUI.prototype.getPYO = function () {
        var v3 = new Laya.Vector3();
        this.cube.transform.rotation.getYawPitchRoll(v3);
        console.error(v3.x * Math.PI, v3.y * Math.PI, v3.z * Math.PI);
    };
    /**度转弧度 */
    GameUI.prototype.deg2rad = function (deg) {
        var res = 0;
        res = deg * Math.PI / 180;
        return res;
    };
    return GameUI;
}());
exports.default = GameUI;
},{"./RES":4}],4:[function(require,module,exports){
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var la = Laya;
////普通资源类型////
var RES_PATH_ATLAS = "res/atlas"; //图集
var RES_PATH_IMAGE = "res/images"; //图片
var RES_PATH_CONFIG = "res/configs"; //配置文件
var RES_PATH_AUDIO = "res/sounds"; //音频,不能预先加载
var RES_PATH_VIEW = "res/view"; //导出的UI文件
var RES_PATH_ANIMATION = "res/animation"; // 动画文件
////3D类型资源////
var RES_PATH_D3_SCENES = "res/d3/scenes"; //场景
var RES_PATH_D3_MODELS = "res/d3/models"; //模型
var RES_PATH_D3_OTHERS = "res/d3/others"; //其他
/**资源类型 */
var RES_TYPE;
(function (RES_TYPE) {
    RES_TYPE[RES_TYPE["normal"] = 0] = "normal";
    RES_TYPE[RES_TYPE["d3"] = 1] = "d3"; //3d资源，场景，模型等,3d资源用RES3D加载
})(RES_TYPE = exports.RES_TYPE || (exports.RES_TYPE = {}));
/**资源封装类 */
var RES = /** @class */ (function () {
    function RES() {
    }
    /**
     * 根据资源民称后缀拼接资源真实路径，资源需要按照规定位置存放
     * 参数如: 1.jpg
     */
    RES.joinResPath = function (resName) {
        // 如果已经是全路径，就不做凭拼接
        if (resName.indexOf("res/") >= 0) {
            return resName;
        }
        var path = "";
        var suffix = la.Utils.getFileExtension(resName);
        switch (suffix) {
            case "atlas":
                path = RES_PATH_ATLAS;
                // 对序列帧动画做专门处理
                if (resName.indexOf("anim") >= 0) {
                    path = RES_PATH_ANIMATION;
                }
                break;
            case "png":
            case "jpg":
            case "jpeg":
                path = RES_PATH_IMAGE;
                break;
            case "json":
            case "xml":
                path = RES_PATH_CONFIG;
                break;
            case "mp3":
            case "wav":
                path = RES_PATH_AUDIO;
                break;
            case "sk":
                path = RES_PATH_ANIMATION;
                break;
            case "scene":
                path = RES_PATH_VIEW;
                break;
            case "ls":
                path = RES_PATH_D3_SCENES;
                break;
            case "lh":
                path = RES_PATH_D3_MODELS;
                break;
            default:
                break;
        }
        var res = path + "/" + resName;
        return res;
    };
    /**
     * 获取资源的完整路径
     * @param _resName 资源局部路径
     */
    RES.getFullResPath = function (_resName) {
        return this.joinResPath(_resName);
    };
    /**
     * 获取资源，资源需要已经加载过，否则返回空
     * @param resName 资源局部路径，例如: scene1/scene1.ls
     */
    RES.getRes = function (resName) {
        var resFullName = this.joinResPath(resName);
        return this.getResByFullName(resFullName);
    };
    /**
     * 获取资源，资源需要已经加载过，否则返回空
     * @param resName 资源完整路径
     */
    RES.getResByFullName = function (resFullName) {
        var res = la.loader.getRes(resFullName);
        return res;
    };
    /**
     * 完全清除一个资源，注意：3d资源通过这个只能清除一层壳，3d资源的管理只能通过AssetRecord文件来做
     * @param resName 资源局部路径
     */
    RES.clearRes = function (resName) {
        var resFullName = this.joinResPath(resName);
        this.clearResByFullName(resFullName);
    };
    /**
     * 完全清除一个资源，注意：3d资源通过这个只能清除一层壳，3d资源的管理只能通过AssetRecord文件来做
     * @param resName 资源完整路径
     */
    RES.clearResByFullName = function (resFullName) {
        // lg.info(TG_RES, "clearResByFullName %o", resFullName);
        Laya.Loader.clearRes(resFullName);
    };
    return RES;
}());
exports.default = RES;
/**普通资源加载封装 */
var RESNormal = /** @class */ (function () {
    function RESNormal() {
    }
    /**
     * 获得一张图集中的图片,图集需要已加载过，否则回空
     * @param atlasName 图集名称
     * @param imgName 图片名称
     */
    RESNormal.getImageFromAtlas = function (atlasName, imgName) {
        var fullPath = atlasName + "/" + imgName;
        return RES.getResByFullName(fullPath);
    };
    /**
     * 加载单个资源,图集、图片、配置表等
     * @param _resName 资源局部路径，例如: bg.png
     * @param _needMgr 是否归于场景管理
     */
    RESNormal.loadRes = function (_resName, _prograssFunc) {
        if (_prograssFunc === void 0) { _prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var real_path;
            return __generator(this, function (_a) {
                real_path = RES.joinResPath(_resName);
                if (!real_path)
                    return [2 /*return*/, null];
                return [2 /*return*/, this.loadResByFullName(real_path)];
            });
        });
    };
    /**
     * 加载资源组
     * @param _resArr 资源组数组，每个资源都是局部路径
     * @param _prograssFunc 进度回调，带一个参数（0-1）
     */
    RESNormal.loadGroupAsync = function (_resArr, _prograssFunc) {
        if (_prograssFunc === void 0) { _prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var real_res_arr, _i, _resArr_1, res_name, real_name;
            return __generator(this, function (_a) {
                if (!_resArr || _resArr.length <= 0) {
                    return [2 /*return*/, false];
                }
                real_res_arr = [];
                for (_i = 0, _resArr_1 = _resArr; _i < _resArr_1.length; _i++) {
                    res_name = _resArr_1[_i];
                    real_name = RES.joinResPath(res_name);
                    real_res_arr.push(real_name);
                }
                return [2 /*return*/, this.loadResByFullName(real_res_arr, _prograssFunc)];
            });
        });
    };
    /**
     * 加载资源,使用完整路径
     * @param _resName 完整资源路径或资源组名
     * @param prograssFunc 进度回调，带一个参数（0-1）
     */
    RESNormal.loadResByFullName = function (resFullName, prograssFunc) {
        if (prograssFunc === void 0) { prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var prograssHandler, progress_handler;
            var _this = this;
            return __generator(this, function (_a) {
                if (!resFullName)
                    return [2 /*return*/];
                prograssHandler = null;
                progress_handler = null;
                if (prograssFunc) {
                    progress_handler = la.Handler.create(this, prograssFunc, null, false);
                }
                return [2 /*return*/, new Promise(function (resolve) {
                        la.loader.load(resFullName, la.Handler.create(_this, function (_res) {
                            // lg.info(TG_RES, "loadResFull normal over %o", resFullName);
                            resolve(_res);
                        }), progress_handler);
                    })];
            });
        });
    };
    return RESNormal;
}());
exports.RESNormal = RESNormal;
/**3d资源加载封装 */
var RESD3 = /** @class */ (function () {
    function RESD3() {
    }
    /**
     * 根据lh、ls资源名称，获取对应的AssetsRecord文件路径
     * @param resName 场景或模型资源的局部路径
     */
    RESD3.getAssetsRecord = function (resName) {
        var resFullName = RES.joinResPath(resName);
        return this.getAssetsRecordByResFullName(resFullName);
    };
    /**
     * 根据lh、ls资源名称，获取对应的AssetsRecord文件路径
     * @param resFullName 场景或模型资源的完整路径
     */
    RESD3.getAssetsRecordByResFullName = function (resFullName) {
        var num = resFullName.lastIndexOf('/');
        var parentFolder = resFullName.substr(0, num);
        var assetsRecordUrl = parentFolder + "/AssetsRecord.json";
        return assetsRecordUrl;
    };
    /**
     * 获取某个已加载过的3d物体的克隆
     * @param _resName 局部路径
     */
    RESD3.getSprited3DClone = function (resName) {
        var spriteModel = RES.getRes(resName);
        return spriteModel.clone();
    };
    /**
     * 加载3D资源,使用完整路径
     * @param resFullName 资源局部路径
     * @param prograssFunc loading函数
     */
    RESD3.loadRes = function (resName, prograssFunc) {
        if (prograssFunc === void 0) { prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var resFullName;
            return __generator(this, function (_a) {
                resFullName = RES.getFullResPath(resName);
                return [2 /*return*/, this.loadResByFullName(resFullName, prograssFunc)];
            });
        });
    };
    /**
     * 加载3D资源组
     * @param _resArr 资源组数组，所有资源都是局部路径
     * @param _prograssFunc 进度回调，带一个参数（0-1）
     */
    RESD3.loadGroupAsync = function (_resArr, _prograssFunc) {
        if (_prograssFunc === void 0) { _prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var real_res_arr, _i, _resArr_2, res_name, real_name;
            return __generator(this, function (_a) {
                if (!_resArr || _resArr.length <= 0) {
                    return [2 /*return*/, false];
                }
                real_res_arr = [];
                for (_i = 0, _resArr_2 = _resArr; _i < _resArr_2.length; _i++) {
                    res_name = _resArr_2[_i];
                    real_name = RES.joinResPath(res_name);
                    real_res_arr.push(real_name);
                }
                return [2 /*return*/, this.loadResByFullName(real_res_arr, _prograssFunc)];
            });
        });
    };
    /**
     * 加载3D资源组
     * @param _resArr 资源组数组，所有资源都是完整路径
     * @param _prograssFunc 进度回调，带一个参数（0-1）
     */
    RESD3.loadGroupAsyncByFullName = function (_resArr, _prograssFunc) {
        if (_prograssFunc === void 0) { _prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!_resArr || _resArr.length <= 0) {
                    return [2 /*return*/, false];
                }
                return [2 /*return*/, this.loadResByFullName(_resArr, _prograssFunc)];
            });
        });
    };
    /**
     * 加载3D资源,使用完整路径
     * @param resFullName 资源完整路径
     * @param prograssFunc loading函数
     */
    RESD3.loadResByFullName = function (resFullName, prograssFunc) {
        if (prograssFunc === void 0) { prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var prograssHandler, progress_handler;
            var _this = this;
            return __generator(this, function (_a) {
                if (!resFullName)
                    return [2 /*return*/];
                prograssHandler = null;
                progress_handler = null;
                if (prograssFunc) {
                    progress_handler = la.Handler.create(this, prograssFunc, null, false);
                }
                return [2 /*return*/, new Promise(function (resolve) {
                        la.loader.create(resFullName, la.Handler.create(_this, function () {
                            // lg.info(TG_RES, "loadResByFullName 3d over %o", resFullName);
                            resolve();
                        }), progress_handler);
                    })];
            });
        });
    };
    /**
     * 加载3D资源,基于AssetsRecord加载,进度条更精细
     * @param resFullName 资源完整路径
     * @param prograssFunc loading函数
     */
    RESD3.loadResByAssetsRecord = function (resFullName, prograssFunc) {
        if (prograssFunc === void 0) { prograssFunc = null; }
        return __awaiter(this, void 0, void 0, function () {
            var arRes, arConfig, resArr, num, parentFolder, _i, arConfig_1, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        arRes = this.getAssetsRecordByResFullName(resFullName);
                        return [4 /*yield*/, this.loadResByFullName(arRes)];
                    case 1:
                        _a.sent();
                        arConfig = RES.getResByFullName(arRes);
                        if (!arConfig || arConfig.length <= 0) {
                            return [2 /*return*/];
                        }
                        resArr = [];
                        num = resFullName.lastIndexOf('/');
                        parentFolder = resFullName.substr(0, num) + '/';
                        for (_i = 0, arConfig_1 = arConfig; _i < arConfig_1.length; _i++) {
                            res = arConfig_1[_i];
                            resArr.push(parentFolder + res.url);
                        }
                        return [4 /*yield*/, this.loadResByFullName(resArr, prograssFunc)];
                    case 2:
                        _a.sent();
                        // 最后再加载并创建自身（ls、lh），其内部资源已经在上方加载完了
                        return [4 /*yield*/, this.loadResByFullName(resFullName)];
                    case 3:
                        // 最后再加载并创建自身（ls、lh），其内部资源已经在上方加载完了
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return RESD3;
}());
exports.RESD3 = RESD3;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
